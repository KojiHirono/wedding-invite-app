import { motion, useAnimation } from "framer-motion";
import Image from "next/image";
import { useEffect, useRef, useState } from "react";

/**
 * 表紙コンポーネント
 *
 * @returns
 */
const InvitationCover = () => {
  const controls = useAnimation();
  const [isAnimating, setIsAnimating] = useState(true);

  // ページ初期ロード時に、ストロークアニメーション中はスクロール禁止にし、
  // アニメーション終了後にスクロールを許可して別のアニメーションを開始する
  useEffect(() => {
    // 強制トップにスクロール
    window.scrollTo(0, 0);

    // 初期にスクロールを制御
    document.body.style.overflow = "hidden";

    // CSSストロークアニメーション後のアニメーション
    const timer = setTimeout(() => {
      controls.start({
        top: "2rem",
        scale: 1,
        opacity: 1,
        position: "relative",
        transition: { duration: 1 },
      });

      // スクロールを許可
      document.body.style.overflow = "auto";
    }, 5000);

    return () => {
      // 時間をリセット
      clearTimeout(timer);
      // スクロールを許可
      document.body.style.overflow = "auto";
    };
  }, [controls]);

  const svgRef = useRef<SVGSVGElement | null>(null);

  // 各pathのストローク設定
  useEffect(() => {
    if (!svgRef.current) return;

    const paths = svgRef.current.querySelectorAll<SVGPathElement>("path");

    paths.forEach((path) => {
      const length = path.getTotalLength();
      path.style.strokeDasharray = `${length}`;
      path.style.strokeDashoffset = `${length}`;
    });
  }, []);

  return (
    <>
      {isAnimating && (
        <motion.div
          className="fixed inset-0 z-40 bg-white"
          initial={{ opacity: 1 }}
          animate={{ opacity: 0 }}
          transition={{ delay: 5, duration: 3, ease: "easeInOut" }}
          onAnimationComplete={() => setIsAnimating(false)}
        />
      )}
      <div className="mb-10 min-h-screen w-full space-y-11 overflow-x-hidden text-center font-[Jomolihar,serif] text-3xl md:text-5xl">
        <motion.div
          initial={{
            position: "absolute",
            top: "50%",
            left: "50%",
            x: "-50%",
            y: "-50%",
            scale: 2,
            opacity: 1,
          }}
          animate={controls}
          className="z-50 pt-11"
        >
          <svg
            ref={svgRef}
            viewBox="0 0 80 15"
            fill="none"
            className="mx-auto block h-auto w-2/3"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M76.2188 10.1523L70.3008 2.79297V8.03125C70.3008 8.375 70.3164 8.65625 70.3477 8.875C70.3867 9.08594 70.4531 9.25391 70.5469 9.37891C70.6406 9.50391 70.7695 9.59375 70.9336 9.64844C71.0977 9.70312 71.3086 9.73828 71.5664 9.75391V10H68.4258V9.75391C68.6992 9.73047 68.918 9.69531 69.082 9.64844C69.2539 9.59375 69.3828 9.50391 69.4688 9.37891C69.5625 9.25391 69.625 9.08594 69.6562 8.875C69.6875 8.65625 69.7031 8.375 69.7031 8.03125V2.14844C69.5703 1.99219 69.457 1.86719 69.3633 1.77344C69.2695 1.67188 69.1758 1.59766 69.082 1.55078C68.9883 1.49609 68.8906 1.46094 68.7891 1.44531C68.6875 1.42188 68.5664 1.41016 68.4258 1.41016V1.14062H70.7109L75.8555 7.62109V3.10938C75.8555 2.29688 75.7266 1.79688 75.4688 1.60938C75.3672 1.54688 75.2539 1.50391 75.1289 1.48047C75.0117 1.44922 74.8281 1.42578 74.5781 1.41016V1.14062H77.707V1.41016C77.457 1.42578 77.2695 1.45312 77.1445 1.49219C77.0273 1.53125 76.9258 1.58203 76.8398 1.64453C76.5742 1.81641 76.4414 2.30469 76.4414 3.10938V10.1523H76.2188Z"
              fill="#112404"
            />
            <path
              d="M63.5039 0.964844C64.1367 0.964844 64.7383 1.09766 65.3086 1.36328C65.8867 1.62891 66.375 1.99609 66.7734 2.46484C67.1016 2.86328 67.3555 3.32812 67.5352 3.85938C67.7148 4.39062 67.8047 4.96094 67.8047 5.57031C67.8047 6.25 67.6953 6.875 67.4766 7.44531C67.2656 8.00781 66.9648 8.49219 66.5742 8.89844C66.1914 9.30469 65.7305 9.62109 65.1914 9.84766C64.6602 10.0742 64.0742 10.1875 63.4336 10.1875C62.7852 10.1875 62.1914 10.0742 61.6523 9.84766C61.1133 9.62109 60.6523 9.30469 60.2695 8.89844C59.8867 8.48438 59.5898 7.99219 59.3789 7.42188C59.168 6.85156 59.0625 6.22266 59.0625 5.53516C59.0625 4.86328 59.1719 4.24609 59.3906 3.68359C59.6094 3.12109 59.9141 2.64062 60.3047 2.24219C60.6953 1.83594 61.1602 1.52344 61.6992 1.30469C62.2461 1.07812 62.8477 0.964844 63.5039 0.964844ZM63.3867 1.43359C63.0195 1.43359 62.668 1.51953 62.332 1.69141C61.9961 1.85547 61.7031 2.08594 61.4531 2.38281C61.3203 2.53906 61.1992 2.73438 61.0898 2.96875C60.9883 3.20312 60.8984 3.46094 60.8203 3.74219C60.7422 4.01562 60.6836 4.30859 60.6445 4.62109C60.6055 4.93359 60.5859 5.24609 60.5859 5.55859C60.5859 6.36328 60.6914 7.07812 60.9023 7.70312C61.1133 8.32812 61.4062 8.79688 61.7812 9.10938C62.25 9.50781 62.8047 9.70703 63.4453 9.70703C63.7812 9.70703 64.0977 9.64453 64.3945 9.51953C64.6992 9.39453 64.9648 9.21875 65.1914 8.99219C65.918 8.28125 66.2812 7.11719 66.2812 5.5C66.2812 4.72656 66.1719 4.03906 65.9531 3.4375C65.7422 2.83594 65.4453 2.37109 65.0625 2.04297C64.5703 1.63672 64.0117 1.43359 63.3867 1.43359Z"
              fill="#112404"
            />
            <path
              d="M55.6758 2.60547C55.6758 2.35547 55.6602 2.15625 55.6289 2.00781C55.6055 1.85938 55.5469 1.74219 55.4531 1.65625C55.3594 1.57031 55.2266 1.51172 55.0547 1.48047C54.8828 1.44922 54.6562 1.42578 54.375 1.41016V1.14062H58.3477V1.41016C58.0664 1.41797 57.8398 1.44141 57.668 1.48047C57.4961 1.51172 57.3633 1.57031 57.2695 1.65625C57.1758 1.74219 57.1133 1.86328 57.082 2.01953C57.0508 2.16797 57.0352 2.36328 57.0352 2.60547V8.55859C57.0352 8.80078 57.0508 9 57.082 9.15625C57.1211 9.30469 57.1875 9.42188 57.2812 9.50781C57.375 9.59375 57.5078 9.65625 57.6797 9.69531C57.8516 9.72656 58.0742 9.74609 58.3477 9.75391V10H54.375V9.75391C54.6562 9.74609 54.8828 9.72656 55.0547 9.69531C55.2266 9.65625 55.3555 9.59375 55.4414 9.50781C55.5352 9.42188 55.5977 9.30469 55.6289 9.15625C55.6602 9.00781 55.6758 8.80859 55.6758 8.55859V2.60547Z"
              fill="#112404"
            />
            <path
              d="M48.6445 1.70312C48.2695 1.70312 47.9609 1.72266 47.7188 1.76172C47.4844 1.80078 47.2891 1.88281 47.1328 2.00781C46.9844 2.13281 46.8633 2.30859 46.7695 2.53516C46.6836 2.75391 46.6016 3.04688 46.5234 3.41406H46.1953L46.2773 1.14062H53.8242L53.9062 3.41406H53.5781C53.5 3.04688 53.4141 2.75391 53.3203 2.53516C53.2344 2.30859 53.1172 2.13281 52.9688 2.00781C52.8203 1.88281 52.625 1.80078 52.3828 1.76172C52.1406 1.72266 51.8281 1.70312 51.4453 1.70312H50.7305V8.55859C50.7305 8.80078 50.7461 8.99609 50.7773 9.14453C50.8086 9.29297 50.8672 9.41016 50.9531 9.49609C51.0469 9.58203 51.1758 9.64453 51.3398 9.68359C51.5117 9.71484 51.7344 9.73828 52.0078 9.75391V10H48.1172V9.75391C48.3906 9.73828 48.6094 9.71484 48.7734 9.68359C48.9375 9.64453 49.0625 9.57812 49.1484 9.48438C49.2422 9.38281 49.3008 9.24609 49.3242 9.07422C49.3555 8.90234 49.3711 8.67578 49.3711 8.39453V1.70312H48.6445Z"
              fill="#112404"
            />
            <path
              d="M45.8789 10H42.4688V9.75391C42.5859 9.75391 42.6836 9.75391 42.7617 9.75391C42.8398 9.74609 42.9023 9.73828 42.9492 9.73047C43.0039 9.71484 43.0508 9.70312 43.0898 9.69531C43.1289 9.67969 43.168 9.66016 43.207 9.63672C43.2695 9.59766 43.3164 9.55078 43.3477 9.49609C43.3867 9.43359 43.4062 9.37109 43.4062 9.30859C43.4062 9.08984 43.3203 8.78516 43.1484 8.39453L42.5859 7.11719H39.0938L38.4727 8.67578C38.4414 8.76172 38.4141 8.85156 38.3906 8.94531C38.375 9.03125 38.3672 9.11719 38.3672 9.20312C38.3672 9.38281 38.4375 9.51953 38.5781 9.61328C38.7188 9.70703 38.9531 9.75391 39.2812 9.75391V10H36.6211V9.75391C36.7852 9.74609 36.9258 9.71875 37.043 9.67188C37.1602 9.625 37.2773 9.52734 37.3945 9.37891C37.5117 9.22266 37.6367 9.00391 37.7695 8.72266C37.9102 8.43359 38.0859 8.04297 38.2969 7.55078L41.0742 0.988281H41.332L44.6719 8.58203C44.7812 8.83203 44.875 9.03125 44.9531 9.17969C45.0391 9.32812 45.125 9.44531 45.2109 9.53125C45.2969 9.60938 45.3906 9.66406 45.4922 9.69531C45.6016 9.72656 45.7305 9.74609 45.8789 9.75391V10ZM42.4102 6.57812L40.8633 2.88672L39.3164 6.57812H42.4102Z"
              fill="#112404"
            />
            <path
              d="M30.9141 1.70312C30.5391 1.70312 30.2305 1.72266 29.9883 1.76172C29.7539 1.80078 29.5586 1.88281 29.4023 2.00781C29.2539 2.13281 29.1328 2.30859 29.0391 2.53516C28.9531 2.75391 28.8711 3.04688 28.793 3.41406H28.4648L28.5469 1.14062H36.0938L36.1758 3.41406H35.8477C35.7695 3.04688 35.6836 2.75391 35.5898 2.53516C35.5039 2.30859 35.3867 2.13281 35.2383 2.00781C35.0898 1.88281 34.8945 1.80078 34.6523 1.76172C34.4102 1.72266 34.0977 1.70312 33.7148 1.70312H33V8.55859C33 8.80078 33.0156 8.99609 33.0469 9.14453C33.0781 9.29297 33.1367 9.41016 33.2227 9.49609C33.3164 9.58203 33.4453 9.64453 33.6094 9.68359C33.7812 9.71484 34.0039 9.73828 34.2773 9.75391V10H30.3867V9.75391C30.6602 9.73828 30.8789 9.71484 31.043 9.68359C31.207 9.64453 31.332 9.57812 31.418 9.48438C31.5117 9.38281 31.5703 9.24609 31.5938 9.07422C31.625 8.90234 31.6406 8.67578 31.6406 8.39453V1.70312H30.9141Z"
              fill="#112404"
            />
            <path
              d="M25.3125 2.60547C25.3125 2.35547 25.2969 2.15625 25.2656 2.00781C25.2422 1.85938 25.1836 1.74219 25.0898 1.65625C24.9961 1.57031 24.8633 1.51172 24.6914 1.48047C24.5195 1.44922 24.293 1.42578 24.0117 1.41016V1.14062H27.9844V1.41016C27.7031 1.41797 27.4766 1.44141 27.3047 1.48047C27.1328 1.51172 27 1.57031 26.9062 1.65625C26.8125 1.74219 26.75 1.86328 26.7188 2.01953C26.6875 2.16797 26.6719 2.36328 26.6719 2.60547V8.55859C26.6719 8.80078 26.6875 9 26.7188 9.15625C26.7578 9.30469 26.8242 9.42188 26.918 9.50781C27.0117 9.59375 27.1445 9.65625 27.3164 9.69531C27.4883 9.72656 27.7109 9.74609 27.9844 9.75391V10H24.0117V9.75391C24.293 9.74609 24.5195 9.72656 24.6914 9.69531C24.8633 9.65625 24.9922 9.59375 25.0781 9.50781C25.1719 9.42188 25.2344 9.30469 25.2656 9.15625C25.2969 9.00781 25.3125 8.80859 25.3125 8.55859V2.60547Z"
              fill="#112404"
            />
            <path
              d="M23.4375 1.41016C23.2812 1.41797 23.1484 1.4375 23.0391 1.46875C22.9375 1.49219 22.8438 1.55078 22.7578 1.64453C22.6719 1.73047 22.5859 1.85547 22.5 2.01953C22.4219 2.17578 22.3242 2.38672 22.207 2.65234L19.2422 10.1523H19.043L15.75 2.80469C15.6016 2.5 15.4727 2.25781 15.3633 2.07812C15.2617 1.89844 15.1602 1.76172 15.0586 1.66797C14.9648 1.56641 14.8594 1.5 14.7422 1.46875C14.6328 1.42969 14.4961 1.41016 14.332 1.41016V1.14062H17.9062V1.41016L17.5078 1.42188C17.0938 1.44531 16.8867 1.58594 16.8867 1.84375C16.8867 1.89844 16.8945 1.96094 16.9102 2.03125C16.9258 2.09375 16.9531 2.17969 16.9922 2.28906C17.0312 2.39844 17.0859 2.53516 17.1562 2.69922C17.2266 2.86328 17.3203 3.07031 17.4375 3.32031L19.4531 7.84375L21.4102 2.94531C21.5039 2.73438 21.5703 2.54297 21.6094 2.37109C21.6562 2.19922 21.6797 2.05859 21.6797 1.94922C21.6797 1.88672 21.6602 1.82031 21.6211 1.75C21.582 1.67188 21.5312 1.61328 21.4688 1.57422C21.3828 1.51172 21.2891 1.47266 21.1875 1.45703C21.0938 1.43359 20.9336 1.41797 20.707 1.41016V1.14062H23.4375V1.41016Z"
              fill="#112404"
            />
            <path
              d="M12.4219 10.1523L6.50391 2.79297V8.03125C6.50391 8.375 6.51953 8.65625 6.55078 8.875C6.58984 9.08594 6.65625 9.25391 6.75 9.37891C6.84375 9.50391 6.97266 9.59375 7.13672 9.64844C7.30078 9.70312 7.51172 9.73828 7.76953 9.75391V10H4.62891V9.75391C4.90234 9.73047 5.12109 9.69531 5.28516 9.64844C5.45703 9.59375 5.58594 9.50391 5.67188 9.37891C5.76562 9.25391 5.82812 9.08594 5.85938 8.875C5.89062 8.65625 5.90625 8.375 5.90625 8.03125V2.14844C5.77344 1.99219 5.66016 1.86719 5.56641 1.77344C5.47266 1.67188 5.37891 1.59766 5.28516 1.55078C5.19141 1.49609 5.09375 1.46094 4.99219 1.44531C4.89062 1.42188 4.76953 1.41016 4.62891 1.41016V1.14062H6.91406L12.0586 7.62109V3.10938C12.0586 2.29688 11.9297 1.79688 11.6719 1.60938C11.5703 1.54688 11.457 1.50391 11.332 1.48047C11.2148 1.44922 11.0312 1.42578 10.7812 1.41016V1.14062H13.9102V1.41016C13.6602 1.42578 13.4727 1.45312 13.3477 1.49219C13.2305 1.53125 13.1289 1.58203 13.043 1.64453C12.7773 1.81641 12.6445 2.30469 12.6445 3.10938V10.1523H12.4219Z"
              fill="#112404"
            />
            <path
              d="M1.53516 2.60547C1.53516 2.35547 1.51953 2.15625 1.48828 2.00781C1.46484 1.85938 1.40625 1.74219 1.3125 1.65625C1.21875 1.57031 1.08594 1.51172 0.914062 1.48047C0.742188 1.44922 0.515625 1.42578 0.234375 1.41016V1.14062H4.20703V1.41016C3.92578 1.41797 3.69922 1.44141 3.52734 1.48047C3.35547 1.51172 3.22266 1.57031 3.12891 1.65625C3.03516 1.74219 2.97266 1.86328 2.94141 2.01953C2.91016 2.16797 2.89453 2.36328 2.89453 2.60547V8.55859C2.89453 8.80078 2.91016 9 2.94141 9.15625C2.98047 9.30469 3.04688 9.42188 3.14062 9.50781C3.23438 9.59375 3.36719 9.65625 3.53906 9.69531C3.71094 9.72656 3.93359 9.74609 4.20703 9.75391V10H0.234375V9.75391C0.515625 9.74609 0.742188 9.72656 0.914062 9.69531C1.08594 9.65625 1.21484 9.59375 1.30078 9.50781C1.39453 9.42188 1.45703 9.30469 1.48828 9.15625C1.51953 9.00781 1.53516 8.80859 1.53516 8.55859V2.60547Z"
              fill="#112404"
            />
          </svg>
        </motion.div>
        <Image
          src="/images/InvitationCover.jpg"
          width={0}
          height={0}
          sizes="100vw"
          className="w-full"
          alt=""
          priority
        />
        <div>
          <p>KOJI & YUKI</p>
          <p className="text-2xl">2025.10.10</p>
        </div>
        <div className="relative">
          <div className="absolute bottom-0 grid h-2/3 w-full grid-cols-5 overflow-hidden">
            <motion.div
              style={{ originY: 1, willChange: "transform" }}
              animate={{
                rotate: [
                  4, 3.5, 3, 2.5, 2, 1.5, 1, 0.5, 0, -0.5, -1, -1.5, -2, -2.5,
                  -3, -3.5, -4,
                ],
              }}
              transition={{
                duration: 2,
                repeat: Infinity,
                ease: "easeInOut",
                repeatType: "mirror",
              }}
            >
              <Image
                src="/images/plant01.png"
                width={0}
                height={0}
                sizes="100vw"
                className="h-full w-auto"
                alt=""
              />
            </motion.div>
            <motion.div
              style={{ originY: 1, willChange: "transform" }}
              animate={{
                rotate: [
                  4, 3.5, 3, 2.5, 2, 1.5, 1, 0.5, 0, -0.5, -1, -1.5, -2, -2.5,
                  -3, -3.5, -4,
                ],
              }}
              transition={{
                duration: 1.5,
                repeat: Infinity,
                ease: "easeInOut",
                repeatType: "mirror",
              }}
            >
              <Image
                src="/images/plant02.png"
                width={0}
                height={0}
                sizes="100vw"
                className="h-full w-auto"
                alt=""
              />
            </motion.div>
            <motion.div
              style={{ originY: 1, willChange: "transform" }}
              animate={{
                rotate: [
                  4, 3.5, 3, 2.5, 2, 1.5, 1, 0.5, 0, -0.5, -1, -1.5, -2, -2.5,
                  -3, -3.5, -4,
                ],
              }}
              transition={{
                duration: 2,
                repeat: Infinity,
                ease: "easeInOut",
                repeatType: "mirror",
              }}
            >
              <Image
                src="/images/plant03.png"
                width={0}
                height={0}
                sizes="100vw"
                className="h-full w-auto"
                alt=""
              />
            </motion.div>
            <motion.div
              style={{ originY: 1, willChange: "transform" }}
              animate={{
                rotate: [
                  4, 3.5, 3, 2.5, 2, 1.5, 1, 0.5, 0, -0.5, -1, -1.5, -2, -2.5,
                  -3, -3.5, -4,
                ],
              }}
              transition={{
                duration: 1.5,
                repeat: Infinity,
                ease: "easeInOut",
                repeatType: "mirror",
              }}
            >
              <Image
                src="/images/plant04.png"
                width={0}
                height={0}
                sizes="100vw"
                className="h-full w-auto"
                alt=""
              />
            </motion.div>
            <motion.div
              style={{ originY: 1, willChange: "transform" }}
              animate={{
                rotate: [
                  4, 3.5, 3, 2.5, 2, 1.5, 1, 0.5, 0, -0.5, -1, -1.5, -2, -2.5,
                  -3, -3.5, -4,
                ],
              }}
              transition={{
                duration: 2,
                repeat: Infinity,
                ease: "easeInOut",
                repeatType: "mirror",
              }}
            >
              <Image
                src="/images/plant05.png"
                width={0}
                height={0}
                sizes="100vw"
                className="h-full w-auto"
                alt=""
              />
            </motion.div>
          </div>
          <Image
            src="/images/plants_front.png"
            width={0}
            height={0}
            sizes="100vw"
            className="w-full"
            alt=""
          />
          <div className="absolute bottom-0 h-32 w-full bg-gradient-to-t from-white to-transparent" />
        </div>
      </div>
    </>
  );
};

export default InvitationCover;
